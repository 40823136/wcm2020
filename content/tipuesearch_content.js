var tipuesearch = {"pages": [{'title': '每週內容', 'text': '', 'tags': '', 'url': '每週內容.html'}, {'title': 'w6', 'text': '因疫情的影響,後續改線上教學,需自行準備web cam \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': 'youtube live+obs的串流,小組網站建立,用ssh推送網頁 \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '組長與老師開會,組員觀看討論過程 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w10', 'text': 'Python and Flask \n 測試使用Python程式取出表單中學號以及對應成績 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n \n \n \n \n import csv\n\xa0\xa0\xa0\n# read student list\nfilename = \'D:/1a/1alist.txt\'\nwith open(filename, encoding="utf-8") as f:\n\xa0\xa0\xa0\xa0content = f.readlines()\n\xa0\xa0\xa0\xa0student = [x.strip() for x in content]\n#print(content)\n#print(student)\n\xa0\xa0\xa0\n# Timestamp, email, ????, url, score, desp, memo\n# 0, 1, 2, 3, 4, 5, 6\n#total = 0\n\xa0\xa0\nall = {}\nwith open(\'D:/1a/1a.csv\', encoding="utf-8") as csv_file:\n\xa0\xa0\xa0\xa0csv_reader = csv.reader(csv_file, delimiter=\',\')\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n\xa0\xa0\xa0\xa0line_count = 0\n\xa0\xa0\xa0\xa0for row in csv_reader:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0if line_count == 0:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#print(f\'Column names are {", ".join(row)}\')\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0line_count += 1\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0else:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0student_num = row[1].split("@")[0]\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#print(student_num)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0student_score = row[4]\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#print(student_score)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0try:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0all.update({student_num: student_score})\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0except:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0all.update({student_num: "error"})\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#print(f\'\\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.\')\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#print(f\'\\t{row[4]}\')\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#total += int(row[4])\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0line_count += 1\n#print(all)\n#print(student)\n\xa0\xa0\nfor i in student:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n\xa0\xa0\xa0\xa0#if i in all:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#pass\n\xa0\xa0\xa0\xa0#else:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0#print(str(i))\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n\xa0\xa0\xa0\xa0try:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0print(i + "\\t" + all[i])\n\xa0\xa0\xa0\xa0except:\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0print(i + "\\t60")\n\xa0\xa0\n\xa0\xa0\xa0\n\xa0\xa0\xa0\xa0#print(f\'Processed {line_count} lines.\')\n\xa0\xa0\xa0\xa0#print("??=" + str(total/line_count)) \n \n \n \n \n \n \n \n \n 基本Flask \n \n \n \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n \n \n \n \n from flask import Flask\n\xa0\xa0\napp = Flask(__name__)\n\xa0\xa0\n@app.route(\'/\')\ndef hello_world():\n\xa0\xa0\xa0\xa0return \'Hello, From Flask!\'\n\xa0\xa0\nif __name__== \'__main__\':\n\xa0\xa0\xa0\xa0app.run() \n \n \n \n \n \n \n \n \n 以此為基本再進行延伸。 \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11~w13', 'text': '建立虛擬主機 \n 前面步驟為安裝設定重點為ipv4及ipv6網路設定都為自動 \n 進入介面後，再輸入指令 \n \n \n \n \n \n \n 1 \n \n \n \n sudo vi 00-installer-config.yaml \n \n \n \n \n \n 輸入指令 \n \n \n \n \n \n \n 1 \n \n \n \n sudo netplan apply \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n ping4 140.130.15.254 \n \n \n \n \n \n \n \n 網路部分設定完成 \n 安裝pip3 \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install net-tools \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt update \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install python3-pip \n \n \n \n \n \n \n \n 利用pip3安裝flask flask_cors bs4 lxml markdown \n \n \n \n \n \n \n 1 \n \n \n \n sudo\xa0pip3 install\xa0flask flask_cors bs4 lxml markdown \n \n \n \n \n \n \n \n 建立github資料夾 \n \n \n \n \n \n \n 1 \n \n \n \n mkdir github \n \n \n \n \n \n \n \n 安裝桌面 \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install xorg \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install fluxbox \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install lxde \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w11~w13.html'}, {'title': 'w15', 'text': '利用Pypdf2切割pdf檔 \n 切割PDF之.py程式檔 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n \n \n \n # pypdf2_ex1.py \n import os \n from PyPDF2 import PdfFileWriter, PdfFileReader \n \xa0\xa0\xa0 \xa0 \n pdfReader = PdfFileReader(open("2002_Book_Real-WorldASPNETBuildingAConte.pdf", "rb")) \n information = [("WhatIsCMS",18,45)] \n \xa0\xa0\xa0 \xa0 \n for page in range(len(information)): \n \xa0\xa0\xa0\xa0 pdf_writer = PdfFileWriter() \n \xa0\xa0\xa0\xa0 start = information[page][1] \n \xa0\xa0\xa0\xa0 end = information[page][2] \n \xa0\xa0\xa0\xa0 while start<=end: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.addPage(pdfReader.getPage(start-1)) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 start+=1 \n \xa0\xa0\xa0\xa0 if not os.path.exists("./"): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 os.makedirs(savepath) \n \xa0\xa0\xa0\xa0 output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2]) \n \xa0\xa0\xa0\xa0 with open(output_filename,\'wb\') as out: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.write(out) \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16~w17', 'text': '利用pypdf2擷取pdf與合併pdf的程式，並利用API放上動態網站測試。 \n 利用pypdf2擷取出3個pdf檔 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n \n \n \n # pypdf2_ex2.py \n import os \n from PyPDF2 import PdfFileWriter, PdfFileReader \n \xa0 \xa0 \n pdfReader = PdfFileReader(open("2019_Book_PracticalFlutter.pdf", "rb")) \n information = [("GitAndGithub",16,26),("GitAndGithub",36,46),("GitAndGithub",196,289)] \n \xa0 \xa0 \n for page in range(len(information)): \n \xa0\xa0\xa0\xa0 pdf_writer = PdfFileWriter() \n \xa0\xa0\xa0\xa0 start = information[page][1] \n \xa0\xa0\xa0\xa0 end = information[page][2] \n \xa0\xa0\xa0\xa0 while start<=end: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.addPage(pdfReader.getPage(start-1)) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 start+=1 \n \xa0\xa0\xa0\xa0 if not os.path.exists("./"): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 os.makedirs(savepath) \n \xa0\xa0\xa0\xa0 output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2]) \n \xa0\xa0\xa0\xa0 with open(output_filename,\'wb\') as out: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.write(out) \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w16~w17.html'}, {'title': '產生ssh key', 'text': '利用隨身系統輸入指令sh \n 輸入指令ssh-keygen -t rsa -b 4096 -C "學號" \n 預設之金鑰儲存在y:\\home\\.ssh目錄裡 \n \n 使用puttygen將private key(id_rsa)導入，並轉換為putty能夠讀懂的格式(.ppk)檔案 \n 存好(.ppk)檔後 \n \n 使用scite將public key (id_rsa.pub)打開，到工具列找到Options-->Wrap就能看建完整的檔案內容 \n \n 將完整public key內容複製，進入github右上角下拉選單點擊settings \n \n 點擊SSH and GPG keys \n \n', 'tags': '', 'url': '產生ssh key.html'}, {'title': 'putty設定', 'text': '\n 畫線處請選擇前面步驟所生成之.ppk檔案 \n \n 記得回到Session中按下save存檔，如果這台電腦只有自己使用的話，儲存後沒有特殊情況是不需要重新設定此步驟的: \n \n 修改為 \n \n', 'tags': '', 'url': 'putty設定.html'}, {'title': '@gm帳號建立blogger', 'text': '搜尋blogger進入 \n \n 建立網誌 \n \n 新增文章 \n \n 成功建立網誌 \n \n', 'tags': '', 'url': '@gm帳號建立blogger.html'}, {'title': 'Pelican建立Blog', 'text': '加入disqus \n \n 修改共用的資料 \n \n 修改遠端的資料 \n \n 修改markdown \n \n push \n \n blog建立成功 \n \n', 'tags': '', 'url': 'Pelican建立Blog.html'}, {'title': 'cmsimde網誌方法', 'text': '先建立倉儲 \n \n 在隨身系統中建一個tmp資料夾 \n \n 到github網站git clone自己倉儲的網址,clone完後git submodule add \n 把子模組cmsimde放到網頁資料夾後,進入up_ir資料夾 \n \n 把所有資料複製出wcm4的目錄下 \n \n 進入cmsimde目錄下,將wsgi.py檔拉入SciTE-->tools-->go \n 成功建立網站 \n \n', 'tags': '', 'url': 'cmsimde網誌方法.html'}]};